/*DO NOT EDIT BELOW SECTION MANUALLY*/
/*license*/
// Template generated by ebmcodegen at https://github.com/on-keyday/rebrgen
/*
  Name: Statement_METADATA
  Available variables:
    *this: Visitor
    module_: MappingTable
    item_id: StatementRef
    kind: StatementKind
    metadata: Metadata
      name: IdentifierRef
      values: Expressions
        len: Varint
        container: std::vector<ExpressionRef>
*/
/*DO NOT EDIT ABOVE SECTION MANUALLY*/

CodeWriter w;
w.write(this->metadata_comment_prefix);
auto name = this->module_.get_identifier_or(item_id);
w.write(" ", name);
if (metadata.values.container.size()) {
    w.write("(");
    bool first = true;
    for (auto& v : metadata.values.container) {
        if (!first) {
            w.write(", ");
        }
        first = false;
        MAYBE(val, visit_Expression(*this, v));
        w.write_unformatted(val.to_string());
    }
    w.write(")");
}
w.writeln(this->metadata_comment_suffix);
return w.out();