{
    "lang": "python",
    "suffix": "py",
    "comment_prefix": "\\\"\\\"\\\"",
    "comment_suffix": "\\\"\\\"\\\"",
    "int_type": "int",
    "uint_type": "int",
    "array_type": "list[$TYPE]",
    "byte_array_type": "bytearray",
    "byte_vector_type": "bytearray",
    "vector_type": "list[$TYPE]",
    "optional_type": "Optional[$TYPE]",
    "pointer_type": "Optional[$TYPE]",
    "recursive_struct_type": "$TYPE",
    "end_of_statement": "",
    "block_begin": ":",
    "block_end": "",
    "block_end_type": "",
    "prior_ident": true,
    "struct_keyword": "class",
    "enum_keyword": "class",
    "define_var_keyword": "",
    "var_type_separator": ":",
    "field_type_separator": ":",
    "func_keyword": "def",
    "trailing_return_type": true,
    "enum_member_end": "",
    "func_type_separator": "->",
    "func_void_return_type": "",
    "if_keyword": "if",
    "elif_keyword": "elif",
    "else_keyword": "else",
    "infinity_loop": "while True",
    "conditional_loop": "while",
    "condition_has_parentheses": false,
    "self_ident": "self",
    "param_type_separator": ":",
    "field_end": "",
    "func_style_cast": true,
    "self_param": "self",
    "encoder_param": "w :IO[bytes]",
    "decoder_param": "r :IO[bytes]",
    "true_literal": "True",
    "false_literal": "False",
    "empty_pointer": "None",
    "empty_optional": "None",
    "size_method": "__builtins__.len($VECTOR)",
    "append_method": "$VECTOR.append($ITEM)",
    "assert_method": "assert $CONDITION",
    "length_check_method": "assert __builtins__.len($VECTOR) == $SIZE",
    "variant_mode": "algebraic",
    "algebraic_variant_type": "Union[$TYPES]",
    "algebraic_variant_separator": ",",
    "match_keyword": "match",
    "match_case_keyword": "case",
    "match_case_separator": "",
    "match_default_keyword": "case _",
    "check_union_condition": "not isinstance($FIELD_IDENT, $MEMBER_FULL_IDENT)",
    "check_union_fail_return_value": "False",
    "switch_union": "$FIELD_IDENT = $MEMBER_FULL_IDENT()",
    "address_of_placeholder": "$VALUE",
    "optional_of_placeholder": "$VALUE",
    "decode_bytes_op": "$VALUE = $DECODER.read($LEN)",
    "encode_bytes_op": "w.write($VALUE[:$LEN])",
    "decode_bytes_until_eof_op": "$VALUE = $DECODER.read()",
    "encode_offset": "$ENCODER.tell()",
    "decode_offset": "$DECODER.tell()",
    "is_little_endian_expr": "sys.byteorder == 'little'",
    "peek_bytes_op": "$VALUE = $DECODER.peek($LEN)",
    "format_nested_function": "define",
    "property_setter_ok": "return True",
    "property_setter_fail": "return False",
    "coder_success": "return True",
    "enum_access_style": "$BASE.$IDENT",
    "format_nested_struct": true
}