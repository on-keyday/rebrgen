/*DO NOT EDIT BELOW SECTION MANUALLY*/
/*license*/
// Template generated by ebmcodegen at https://github.com/on-keyday/rebrgen
/*
  Name: Statement_ENDIAN_VARIABLE
  Available variables:
    *this: Visitor
    module_: MappingTable
    item_id: StatementRef
    kind: StatementKind
    endian_variable: EndianVariable
      endian: Endian
      reserved: std::uint8_t
      dynamic_expr: *ExpressionRef
*/
/*DO NOT EDIT ABOVE SECTION MANUALLY*/

/*here to write the hook*/
if (endian_variable.endian() != ebm::Endian::dynamic) {
    return "";
}
ebm::VariableDecl decl;
MAYBE(expr, endian_variable.dynamic_expr());
MAYBE(expr_body, module_.get_expression(expr));
decl.initial_value = expr;
decl.is_constant(true);
decl.var_type = expr_body.body.type;
ebm::Statement stmt;
stmt.body.kind = ebm::StatementKind::VARIABLE_DECL;
stmt.body.var_decl(std::move(decl));

return visit_Statement(*this, stmt, item_id);