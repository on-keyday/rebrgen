/*DO NOT EDIT BELOW SECTION MANUALLY*/
/*license*/
// Template generated by ebmcodegen at https://github.com/on-keyday/rebrgen
/*
  Name: Statement_ENUM_DECL
  Available variables:
    *this: Visitor
    module_: MappingTable
    item_id: StatementRef
    kind: StatementKind
    enum_decl: EnumDecl
      name: IdentifierRef
      base_type: TypeRef
      members: Block
        len: Varint
        container: std::vector<StatementRef>
*/
/*DO NOT EDIT ABOVE SECTION MANUALLY*/

auto name = module_.get_associated_identifier(item_id);

CodeWriter w;
w.writeln("#[derive(Debug, Clone, PartialEq, Eq, Default)]");
w.writeln("pub enum ", name, " {");
{
    auto scope = w.indent_scope();
    bool is_first_member = true;
    for (auto& member_ref : enum_decl.members.container) {
        if (is_first_member) {
            w.writeln("#[default]");
            is_first_member = false;
        }
        MAYBE(member_str, visit_Statement(*this, member_ref));
        w.write(member_str.to_writer());
    }
}
w.writeln("}");

return w;
