/*DO NOT EDIT BELOW SECTION MANUALLY*/
/*license*/
// Template generated by ebmcodegen at https://github.com/on-keyday/rebrgen
/*
  Name: Statement_INIT_CHECK
  Available variables:
    *this: Visitor
    module_: MappingTable
    item_id: StatementRef
    kind: StatementKind
    init_check: InitCheck
      init_check_type: InitCheckType
      target_field: ExpressionRef
      expect_value: ExpressionRef
*/
/*DO NOT EDIT ABOVE SECTION MANUALLY*/

/*here to write the hook*/

MAYBE(init_check_field, visit_Expression(*this, init_check.target_field));
MAYBE(expect_expr, module_.get_expression(init_check.expect_value));
MAYBE(init_check_type, visit_Type(*this, expect_expr.body.type));
CodeWriter w;
if (init_check.init_check_type == ebm::InitCheckType::encode) {
    w.writeln("assert isinstance(", init_check_field.to_writer(), ", ", init_check_type.to_writer(), ")");
}
else {
    w.writeln("if not isinstance(", init_check_field.to_writer(), ", ", init_check_type.to_writer(), "):");
    {
        auto indent = w.indent_scope();
        if (init_check.init_check_type == ebm::InitCheckType::union_get) {
            w.writeln("return None");
        }
        else {
            MAYBE(default_expr, visit_Expression(*this, init_check.expect_value));
            w.writeln(init_check_field.to_writer(), " = ", default_expr.to_writer());
        }
    }
}

return w;