/*DO NOT EDIT BELOW SECTION MANUALLY*/
/*license*/
// Template generated by ebmcodegen at https://github.com/on-keyday/rebrgen
/*
  Name: Expression_BINARY_OP
  Available variables:
    *this: Visitor
    module_: MappingTable
    item_id: ExpressionRef
    type: TypeRef
    kind: ExpressionKind
    bop: BinaryOp
    left: ExpressionRef
    right: ExpressionRef
*/
/*DO NOT EDIT ABOVE SECTION MANUALLY*/
// This code is included within the visit_Expression_BINARY_OP function.
// We can use variables like `this` (for Visitor) and `bop`, `left`, `right` directly.
CodeWriter w;

MAYBE(left_str, visit_Expression(*this, left));
MAYBE(right_str, visit_Expression(*this, right));
auto it = this->alt_binary_op.find(bop);
if (it != this->alt_binary_op.end()) {
    w.write("(", left_str.to_string(), " ", it->second, " ", right_str.to_string(), ")");
}
else {
    w.write("(", left_str.to_string(), " ", to_string(bop), " ", right_str.to_string(), ")");
}

return w.out();
