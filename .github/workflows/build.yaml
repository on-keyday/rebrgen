# costom boilerplate file from sisakulint
name: Deploy

on:
  # Trigger the workflow every time you push to the main branch
  # Using a different branch name? Replace main with your branchâ€™s name
  push:
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: deploy-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build-wasm:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout your repository using git
        # Recommend to fix actions commit SHA
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: "recursive"
      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@6ab9eb1bda2574c4ddb79809fc9247783eaf9021 # v14
        #with:
        #  actions-cache-folder: emsdk
      - name: Set up Ninja
        uses: seanmiddleditch/gha-setup-ninja@3b1f8f94a2f8254bd26914c4ab9474d4f0015f67 # master
      - name: Cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        # prevent renovate from updating this
        if: (!startsWith(github.ref , 'refs/heads/renovate/')) && (!startsWith(github.ref , 'refs/heads/dependabot/'))
        id: cache_web
        env:
          cache-name: cache-web-built
        with:
          path: |
            ./built
            ./utils
          # ./emsdk
          key: web-${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('build.sh') }}
      - name: Pull Utils
        if: ${{ steps.cache_web.outputs.cache-hit }}
        run: |
          cd utils
          git pull
          rm -rf ./built
          . build wasm-em Release futils
          cd ..
      - name: Clone Utils
        if: ${{ !(steps.cache_web.outputs.cache-hit) }}
        run: |
          git clone https://github.com/on-keyday/utils.git
          cd utils
          rm -rf ./built
          . build wasm-em Release futils
          cd ..
      - name: Install libc++-dev and libc++abi-dev
        run: sudo apt-get install libc++-dev libc++abi-dev -y
      - name: Build
        run: |
          rm -rf ./built
          chmod +x script/build.sh
          BUILD_OLD_BMGEN=1 EMSDK_DIR=$EMSDK/ FUTILS_DIR=./utils ./script/build.sh web Release
          cp README.md web/
          cp LICENSE web/
      - name: Upload Artifact
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: bmgen-wasm-${{ github.sha }}
          path: web
        if: ${{ github.ref == 'refs/heads/main' }}

  build-native:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout your repository using git
        # Recommend to fix actions commit SHA
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: "recursive"
      - name: Set up Ninja
        uses: seanmiddleditch/gha-setup-ninja@3b1f8f94a2f8254bd26914c4ab9474d4f0015f67 # master
      - name: Install libc++-dev and libc++abi-dev
        run: sudo apt-get install libc++-dev libc++abi-dev -y
      - name: Cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        # prevent renovate from updating this
        if: (!startsWith(github.ref , 'refs/heads/renovate/')) && (!startsWith(github.ref , 'refs/heads/dependabot/'))
        id: cache_native
        env:
          cache-name: cache-web-built
        with:
          path: |
            ./built
            ./utils
          # ./emsdk
          key: native-${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('script/build.py') }}
      - name: Pull Utils
        if: ${{ steps.cache_native.outputs.cache-hit }}
        run: |
          cd utils
          git pull
          # rm -rf ./built
          . build shared Release futils
          cd ..
      - name: Clone Utils
        if: ${{ !(steps.cache_native.outputs.cache-hit) }}
        run: |
          git clone https://github.com/on-keyday/utils.git
          cd utils
          # rm -rf ./built
          . build shared Release futils
          cd ..
      - name: Install libc++-dev and libc++abi-dev
        run: sudo apt-get install libc++-dev libc++abi-dev -y
      - name: Build
        run: |
          # rm -rf ./built
          chmod +x script/build.sh
          ls -laR .
          BUILD_OLD_BMGEN=1 FUTILS_DIR=$(pwd)/utils ./script/build.sh native Release
      - name: Upload Artifact
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: bmgen-native-${{ github.sha }}
          path: tool

  deploy:
    needs: [build-wasm, build-native]
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout your repository using git
        # Recommend to fix actions commit SHA
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: "recursive"
      - name: Install libc++-dev and libc++abi-dev
        run: sudo apt-get install libc++-dev libc++abi-dev -y
      - name: Download Native Artifact
        uses: actions/download-artifact@v5
        with:
          name: bmgen-native-${{ github.sha }}
          path: tool
      - name: Download WASM Artifact
        uses: actions/download-artifact@v5
        with:
          name: bmgen-wasm-${{ github.sha }}
          path: web
      - name: Generate Glue
        run: |
          chmod -R +x ./tool
          python script/bm/generate_web_glue.py
          python script/ebmwebgen.py
      - name: Upload Web Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bmgen-web
          path: web
