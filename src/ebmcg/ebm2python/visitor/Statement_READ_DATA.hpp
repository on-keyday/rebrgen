/*DO NOT EDIT BELOW SECTION MANUALLY*/
/*license*/
// Template generated by ebmcodegen at https://github.com/on-keyday/rebrgen
/*
  Name: Statement_READ_DATA
  Available variables:
    *this: Visitor
    module_: MappingTable
    item_id: StatementRef
    kind: StatementKind
    read_data: IOData
      io_ref: StatementRef
      target: ExpressionRef
      data_type: TypeRef
      attribute: IOAttribute
        endian: Endian
        sign: bool
        is_peek: bool
        vectorized: bool
        reserved: std::uint8_t
        dynamic_ref: StatementRef
      size: Size
        unit: SizeUnit
        ref: *ExpressionRef
        size: *Varint
      lowered_statement: LoweredStatementRef
*/
/*DO NOT EDIT ABOVE SECTION MANUALLY*/
// This code is included within the visit_Expression_READ_DATA function.
// We can use variables like `this` (for Visitor) and function parameters directly.

// Get the IOData statement object from the io_statement parameter
if (!is_nil(read_data.lowered_statement.id)) {
    return visit_Statement(*this, read_data.lowered_statement.id);
}
auto& io_data = read_data;
// Visit target_expr_obj to get its Python representation
MAYBE(target_expr_str, visit_Expression(*this, io_data.target));

// Generate Python code for writing
MAYBE(struct_format, this->type_to_struct_format(io_data.data_type, io_data.attribute, io_data.size));

MAYBE(read_size_str, get_size_str(*this, io_data.size));

auto io_value = module_.get_identifier_or(io_data.io_ref);

return target_expr_str.to_string() + " = struct.unpack(" + struct_format + ", " + io_value + ".read(" + read_size_str + "))[0]\n";
