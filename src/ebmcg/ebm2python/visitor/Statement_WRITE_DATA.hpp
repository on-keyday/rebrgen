/*DO NOT EDIT BELOW SECTION MANUALLY*/
/*license*/
// Template generated by ebmcodegen at https://github.com/on-keyday/rebrgen
/*
  Name: Statement_WRITE_DATA
  Available variables:
    *this: Visitor
    module_: MappingTable
    item_id: StatementRef
    kind: StatementKind
    write_data: IOData
      io_ref: StatementRef
      target: ExpressionRef
      data_type: TypeRef
      attribute: IOAttribute
        endian: Endian
        sign: bool
        is_peek: bool
        has_lowered_statement: bool
        reserved: std::uint8_t
        dynamic_ref: *StatementRef
      size: Size
        unit: SizeUnit
        ref: *ExpressionRef
        size: *Varint
      lowered_statement: *LoweredIOStatement
        lowering_type: LoweringIOType
        io_statement: LoweredStatementRef
*/
/*DO NOT EDIT ABOVE SECTION MANUALLY*/
if (auto lw = write_data.lowered_statement()) {
    return visit_Statement(*this, lw->io_statement.id);
}

// Get the IOData statement object from the io_statement parameter
auto& io_data = write_data;

// Visit target_expr_obj to get its Python representation
MAYBE(target_expr_str, visit_Expression(*this, io_data.target));

// Generate Python code for writing
MAYBE(struct_format, this->type_to_struct_format(io_data.data_type, io_data.attribute, io_data.size));

auto io_value = module_.get_associated_identifier(io_data.io_ref);

return CODELINE(io_value, ".write(struct.pack(", struct_format, ", ", target_expr_str.to_writer(), "))");
